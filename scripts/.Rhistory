geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ymin = -10
ymax = 100
get_d_points = function(df, model, training_vocab, corpus){
x = density(df$surprisal)$x
y = density(df$surprisal)$y
return(data.frame(model, training_vocab, corpus, x, y))
}
density_data = all_data %>%
mutate(training_vocab=as.factor(ifelse(str_detect(training, "gptbpe"), "gptbpe", as.character(training)))) %>%
group_by(model, training_vocab, corpus) %>%
do({get_d_points(., unique(.$model), unique(.$training_vocab), unique(.$corpus))}) %>%
ungroup() %>%
filter(x>0, x<20)
smooths = read.csv("../data/gam_smooths.sl2013.all.csv")
gam_smooths = smooths %>%
# Fix 0 surprisal = 0 ms
group_by(training_vocab, model, corpus) %>%
mutate(delta=0 - y[1],
# Trim lower bound to make sure it gets plotted within the ylim
y_lower=pmax(ymin, y_lower + delta),
y=y + delta,
# Trim upper bound likewise
y_upper=pmin(ymax, y_upper + delta)) %>%
ungroup()
ggplot() +
theme_bw() +
geom_rect(aes(xmin=0, xmax=10, ymin=-35,ymax=-5), fill="grey") +
geom_hline(yintercept=-5, color="grey") +
geom_hline(yintercept=-35, color="grey") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="black", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggplot() +
theme_bw() +
annotate("rect", aes(xmin=0, xmax=10, ymin=-35,ymax=-5), fill="grey") +
geom_hline(yintercept=-5, color="grey") +
geom_hline(yintercept=-35, color="grey") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="black", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=10, ymin=-35,ymax=-5, fill="grey") +
geom_hline(yintercept=-5, color="grey") +
geom_hline(yintercept=-35, color="grey") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="black", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-35,ymax=-5, fill="grey") +
geom_hline(yintercept=-5, color="grey") +
geom_hline(yintercept=-35, color="grey") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-35,ymax=-10, fill="#a0a0a0") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-35,ymax=-10, fill="#bed9e5") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-35,ymax=-10, fill="#d9eff9") +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-35,ymax=-10, fill="#d9eff9", alpha=0.5) +
geom_line(data = density_data, aes(x=x, y=y*200 - 35), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-40,ymax=-15, fill="#d9eff9", alpha=0.5) +
geom_line(data = density_data, aes(x=x, y=y*200 - 40), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-35, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-40,ymax=-15, fill="#d9eff9", alpha=0.5) +
geom_line(data = density_data, aes(x=x, y=y*200 - 40), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-40, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-40,ymax=-15, fill="grey", alpha=0.5) +
geom_line(data = density_data, aes(x=x, y=y*200 - 40), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-40, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-40,ymax=-15, fill="grey", alpha=0.3) +
geom_line(data = density_data, aes(x=x, y=y*200 - 40), color="#797a76", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-40, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
model_deltas %>%
mutate(test_ppl = if_else(test_ppl > 500, 329.9, test_ppl)) %>%
ggplot(aes(x=test_ppl, y=delta_test_mean, color=training_vocab, fill = training_vocab, ymin=0)) +
theme_bw() +
geom_text(aes(x=275, y=0, label = c("//"))) +
geom_errorbar(aes(ymin=delta_test_mean-delta_test_sem, ymax=delta_test_mean+delta_test_sem), alpha=0.4) +
#geom_smooth(method="lm", se=F) +
geom_point(stat="identity", position="dodge", alpha=1, size=5, aes(shape=model, color = training_vocab)) +
ylab(metric) +
xlab("Test Perplexity") +
#coord_cartesian(ylim = c(1, 16)) +
ggtitle("Test Perplexity vs. Predictive Power") +
scale_color_manual(values = c("bllip-lg"="#440154FF",
"bllip-md"="#39568CFF",
"bllip-sm"="#1F968BFF",
"bllip-xs"="#73D055FF",
"gptbpe"="#f0941f")) +
scale_shape_manual(values = c(19, 17, 15, 18)) +
scale_x_continuous(labels=c(0, 50, 100, 150, 200, 250, 500 ,550), breaks=c(0, 50, 100, 150, 200, 250, 300, 350), minor_breaks = NULL) +
scale_y_continuous(limits = c(0, NA), expand = c(0,0)) +
facet_wrap(~corpus, scales="free") +
coord_cartesian(clip="off") +
theme(axis.text=element_text(size=12),
strip.text.x = element_text(size=12),
legend.text=element_text(size=12),
axis.title=element_text(size=12),
legend.position = "right")
ggsave("../images/cuny2020/ppl_loglik.pdf",height=5,width=12)
# Prepare a residualized regression for x1 onto y, controlling for the effects of x2.
d_resid = model_deltas %>%
drop_na() %>%
group_by(corpus) %>%
# Residualize delta metric w.r.t PPL for each model--training--seed within
# training vocabulary
mutate(resid.delta = resid(lm(delta_test_mean ~ training_vocab:test_ppl))) %>%
# Residualize SG score w.r.t. PPL for each model--training--seed
# within training vocabulary
mutate(resid.sg = resid(lm(sg_score ~ training_vocab:test_ppl))) %>%
ungroup()
# Now plot residual vs SG
d_resid %>%
#filter(corpus != "bnc-brown") %>%
ggplot(aes(x=resid.sg, y=resid.delta)) +
theme_bw() +
scale_shape_manual(values = c(19, 17, 15, 18)) +
geom_smooth(method="lm", se=T, alpha=0.3) +
geom_point(stat="identity", position="dodge", alpha=1, size=4, aes(shape=model, color=training_vocab)) +
ylab(paste("Residual", metric)) +
xlab("Residual Syntax Generalization Score") +
ggtitle("Syntactic Generalization vs. Predictive Power") +
scale_color_manual(values = c("bllip-lg"="#440154FF",
"bllip-md"="#39568CFF",
"bllip-sm"="#1F968BFF",
"bllip-xs"="#73D055FF",
"gptbpe"="#f0941f")) +
facet_grid(.~corpus, scales="free") +
theme(axis.text=element_text(size=14),
strip.text.x = element_text(size=14),
legend.text=element_text(size=14),
axis.title=element_text(size=18),
legend.position = "right")
ggsave("../images/cuny2020/dll_sg.pdf",height=4.5,width=9)
ymin = -10
ymax = 100
get_d_points = function(df, model, training_vocab, corpus){
x = density(df$surprisal)$x
y = density(df$surprisal)$y
return(data.frame(model, training_vocab, corpus, x, y))
}
density_data = all_data %>%
mutate(training_vocab=as.factor(ifelse(str_detect(training, "gptbpe"), "gptbpe", as.character(training)))) %>%
group_by(model, training_vocab, corpus) %>%
do({get_d_points(., unique(.$model), unique(.$training_vocab), unique(.$corpus))}) %>%
ungroup() %>%
filter(x>0, x<20)
smooths = read.csv("../data/gam_smooths.sl2013.all.csv")
gam_smooths = smooths %>%
# Fix 0 surprisal = 0 ms
group_by(training_vocab, model, corpus) %>%
mutate(delta=0 - y[1],
# Trim lower bound to make sure it gets plotted within the ylim
y_lower=pmax(ymin, y_lower + delta),
y=y + delta,
# Trim upper bound likewise
y_upper=pmin(ymax, y_upper + delta)) %>%
ungroup()
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-40,ymax=-15, fill="grey", alpha=0.3) +
geom_line(data = density_data, aes(x=x, y=y*200 - 40), color="grey", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-40, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12)
knitr::opts_chunk$set(dev='cairo_pdf')
model_deltas %>%
mutate(test_ppl = if_else(test_ppl > 500, 329.9, test_ppl)) %>%
ggplot(aes(x=test_ppl, y=delta_test_mean, color=training_vocab, fill = training_vocab, ymin=0)) +
theme_bw() +
geom_text(aes(x=275, y=0, label = c("//"))) +
geom_errorbar(aes(ymin=delta_test_mean-delta_test_sem, ymax=delta_test_mean+delta_test_sem), alpha=0.4) +
#geom_smooth(method="lm", se=F) +
geom_point(stat="identity", position="dodge", alpha=1, size=5, aes(shape=model, color = training_vocab)) +
ylab(metric) +
xlab("Test Perplexity") +
#coord_cartesian(ylim = c(1, 16)) +
ggtitle("Test Perplexity vs. Predictive Power") +
scale_color_manual(values = c("bllip-lg"="#440154FF",
"bllip-md"="#39568CFF",
"bllip-sm"="#1F968BFF",
"bllip-xs"="#73D055FF",
"gptbpe"="#f0941f")) +
scale_shape_manual(values = c(19, 17, 15, 18)) +
scale_x_continuous(labels=c(0, 50, 100, 150, 200, 250, 500 ,550), breaks=c(0, 50, 100, 150, 200, 250, 300, 350), minor_breaks = NULL) +
scale_y_continuous(limits = c(0, NA), expand = c(0,0)) +
facet_wrap(~corpus, scales="free") +
coord_cartesian(clip="off") +
theme(axis.text=element_text(size=12),
strip.text.x = element_text(size=12),
legend.text=element_text(size=12),
axis.title=element_text(size=12),
legend.position = "right")
ggsave("../images/cuny2020/ppl_loglik.pdf",height=5,width=12)
model_deltas %>%
mutate(test_ppl = if_else(test_ppl > 500, 329.9, test_ppl)) %>%
ggplot(aes(x=test_ppl, y=delta_test_mean, color=training_vocab, fill = training_vocab, ymin=0)) +
theme_bw() +
geom_text(aes(x=275, y=0, label = c("//"))) +
geom_errorbar(aes(ymin=delta_test_mean-delta_test_sem, ymax=delta_test_mean+delta_test_sem), alpha=0.4) +
#geom_smooth(method="lm", se=F) +
geom_point(stat="identity", position="dodge", alpha=1, size=5, aes(shape=model, color = training_vocab)) +
ylab(metric) +
xlab("Test Perplexity") +
#coord_cartesian(ylim = c(1, 16)) +
ggtitle("Test Perplexity vs. Predictive Power") +
scale_color_manual(values = c("bllip-lg"="#440154FF",
"bllip-md"="#39568CFF",
"bllip-sm"="#1F968BFF",
"bllip-xs"="#73D055FF",
"gptbpe"="#f0941f")) +
scale_shape_manual(values = c(19, 17, 15, 18)) +
scale_x_continuous(labels=c(0, 50, 100, 150, 200, 250, 500 ,550), breaks=c(0, 50, 100, 150, 200, 250, 300, 350), minor_breaks = NULL) +
scale_y_continuous(limits = c(0, NA), expand = c(0,0)) +
facet_wrap(~corpus, scales="free") +
coord_cartesian(clip="off") +
theme(axis.text=element_text(size=12),
strip.text.x = element_text(size=12),
legend.text=element_text(size=12),
axis.title=element_text(size=12),
legend.position = "right")
ggsave("../images/cuny2020/ppl_loglik.pdf",height=5,width=12, device = cairo_pdf)
# Prepare a residualized regression for x1 onto y, controlling for the effects of x2.
d_resid = model_deltas %>%
drop_na() %>%
group_by(corpus) %>%
# Residualize delta metric w.r.t PPL for each model--training--seed within
# training vocabulary
mutate(resid.delta = resid(lm(delta_test_mean ~ training_vocab:test_ppl))) %>%
# Residualize SG score w.r.t. PPL for each model--training--seed
# within training vocabulary
mutate(resid.sg = resid(lm(sg_score ~ training_vocab:test_ppl))) %>%
ungroup()
# Now plot residual vs SG
d_resid %>%
#filter(corpus != "bnc-brown") %>%
ggplot(aes(x=resid.sg, y=resid.delta)) +
theme_bw() +
scale_shape_manual(values = c(19, 17, 15, 18)) +
geom_smooth(method="lm", se=T, alpha=0.3) +
geom_point(stat="identity", position="dodge", alpha=1, size=4, aes(shape=model, color=training_vocab)) +
ylab(paste("Residual", metric)) +
xlab("Residual Syntax Generalization Score") +
ggtitle("Syntactic Generalization vs. Predictive Power") +
scale_color_manual(values = c("bllip-lg"="#440154FF",
"bllip-md"="#39568CFF",
"bllip-sm"="#1F968BFF",
"bllip-xs"="#73D055FF",
"gptbpe"="#f0941f")) +
facet_grid(.~corpus, scales="free") +
theme(axis.text=element_text(size=14),
strip.text.x = element_text(size=14),
legend.text=element_text(size=14),
axis.title=element_text(size=18),
legend.position = "right")
ggsave("../images/cuny2020/dll_sg.pdf",height=4.5,width=9, device = cairo_pdf)
model_deltas %>%
mutate(test_ppl = if_else(test_ppl > 500, 329.9, test_ppl)) %>%
mutate(train_size = log(train_size)) %>%
mutate(bpe = if_else(training_vocab == "gptbpe", "yes", "no"),
bpe = as.factor(bpe)) %>%
ggplot(aes(x=test_ppl, y=sg_score, color=training_vocab)) +
theme_bw() +
geom_hline(yintercept = 0.28, linetype = "dashed", color="gray") +
geom_text(aes(x=240, y=0.3), label="random", color="gray") +
geom_point(stat="identity", position="dodge", alpha=0.6, size=5, aes(shape=model)) +
geom_text(aes(x=275, y=0, label = c("//"))) +
ylab("SG SCore") +
xlab("Test Perplexity") +
ggtitle("Test PPL vs. SG Score") +
scale_color_manual(values = c("bllip-lg"="#440154FF",
"bllip-md"="#39568CFF",
"bllip-sm"="#1F968BFF",
"bllip-xs"="#73D055FF",
"gptbpe"="#f0941f")) +
scale_shape_manual(values = c(16, 17, 15, 18)) +
scale_x_continuous(labels=c(0, 50, 100, 150, 200, 250, 500 ,550), breaks=c(0, 50, 100, 150, 200, 250, 300, 350), minor_breaks = NULL) +
scale_y_continuous(limits = c(0, 1), expand = c(0,0)) +
theme(axis.text=element_text(size=12),
strip.text.x = element_text(size=12),
legend.text=element_text(size=8),
legend.title=element_text(size=8),
axis.title=element_text(size=14),
legend.position = "none",
legend.direction = "horizontal",
legend.key.width = unit(0.3,"cm"),
legend.spacing.x = unit(0.1, 'cm'))
ggsave("../images/cuny2020/ppl_sg.pdf",height=4.5,width=3, device = cairo_pdf)
ymin = -10
ymax = 100
get_d_points = function(df, model, training_vocab, corpus){
x = density(df$surprisal)$x
y = density(df$surprisal)$y
return(data.frame(model, training_vocab, corpus, x, y))
}
density_data = all_data %>%
mutate(training_vocab=as.factor(ifelse(str_detect(training, "gptbpe"), "gptbpe", as.character(training)))) %>%
group_by(model, training_vocab, corpus) %>%
do({get_d_points(., unique(.$model), unique(.$training_vocab), unique(.$corpus))}) %>%
ungroup() %>%
filter(x>0, x<20)
smooths = read.csv("../data/gam_smooths.sl2013.all.csv")
gam_smooths = smooths %>%
# Fix 0 surprisal = 0 ms
group_by(training_vocab, model, corpus) %>%
mutate(delta=0 - y[1],
# Trim lower bound to make sure it gets plotted within the ylim
y_lower=pmax(ymin, y_lower + delta),
y=y + delta,
# Trim upper bound likewise
y_upper=pmin(ymax, y_upper + delta)) %>%
ungroup()
ggplot() +
theme_bw() +
annotate("rect", xmin=0, xmax=20, ymin=-40,ymax=-15, fill="grey", alpha=0.3) +
geom_line(data = density_data, aes(x=x, y=y*200 - 40), color="grey", size = 0.5) +
geom_line(data = gam_smooths, aes(x=surprisal, y=y, linetype=model, color=training_vocab), size=0.5) +
geom_ribbon(data = gam_smooths, aes(x=surprisal, ymin=y_lower,ymax=y_upper, fill=training_vocab, color=NA), alpha=0.3) +
facet_grid(corpus ~ training_vocab + model, scales="free") +
ylim(-40, 100) +
coord_cartesian(xlim=c(0,20)) +
scale_color_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF", "bllip-sm"="#1F968BFF", "bllip-xs"="#73D055FF", "gptbpe"="#f0941f")) +
scale_fill_manual(values = c("bllip-lg"="#440154FF", "bllip-md"="#39568CFF",  "bllip-sm"="#1F968BFF",  "bllip-xs"="#73D055FF", "gptbpe"="#f0941f"), guide="none") +
scale_x_continuous(labels=c(0, 10, 20), breaks=c(0, 10, 20), minor_breaks = NULL) +
theme(legend.position = "bottom") +
labs(x="Surprisal", y="Slowdown due to surprisal",
linetype="Model architecture",
color="Training vocabulary")
ggsave("../images/cuny2020/gam_surp_corr_full.pdf", height=5.5,width=12, device = cairo_pdf)
